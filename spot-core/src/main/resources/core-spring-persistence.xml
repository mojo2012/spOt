<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd">

	<context:annotation-config />
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<tx:annotation-driven mode="proxy" proxy-target-class="true" />

	<context:component-scan base-package="io.spotnext.core.persistence.hibernate.impl" />

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
		<property name="driverClassName" value="${database.jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${database.jdbc.url}" />
		<property name="username" value="${database.jdbc.username}" />
		<property name="password" value="${database.jdbc.password}" />
	</bean>

	<bean id="jpaProperties" class="java.util.Properties">
		<constructor-arg>
			<props>
				<prop key="hibernate.dialect">${service.persistence.hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${service.persistence.hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${service.persistence.hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${service.persistence.hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">${service.persistence.hibernate.enable_lazy_load_no_trans}
				</prop>
				<prop key="hibernate.dialect.storage_engine">${service.persistence.hibernate.dialect.storage_engine}
				</prop>
				<prop key="hibernate.query.in_clause_parameter_padding.dialect">true</prop>
			</props>
		</constructor-arg>
	</bean>

<!-- 	<bean id="sessionFactory" class="io.spotnext.core.persistence.hibernate.impl.HibernateSessionFactoryBean"> -->
<!-- 		<property name="dataSource" ref="dataSource" /> -->
<!-- 		<property name="hibernateProperties" ref="jpaProperties" /> -->
<!-- 	</bean> -->

	<bean id="hibernatePersistenceProvider" class="io.spotnext.core.persistence.hibernate.impl.HibernatePersistenceProviderImpl" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="io.spotnext.itemtype,io.spotnext.core.persistence.hibernate.support" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="persistenceProvider" ref="hibernatePersistenceProvider" />
		<property name="persistenceUnitPostProcessors">
			<list>
				<bean
					class="io.spotnext.core.persistence.hibernate.impl.TypeServicePersistenceUnitPostProcessor" />
			</list>
		</property>
		<property name="jpaProperties" ref="jpaProperties" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

<!-- 	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager"> -->
<!-- 		<property name="sessionFactory" ref="sessionFactory" /> -->
<!-- 	</bean> -->

	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

</beans>