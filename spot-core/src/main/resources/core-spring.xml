<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<context:spring-configured />
	<context:annotation-config />

	<import resource="core-spring-persistence.xml" />

	<!-- enable @Value property resolution -->
	<context:property-placeholder />

	<context:component-scan base-package="io.spotnext.infrastructure.support.spring" />
	<context:component-scan base-package="io.spotnext.infrastructure.spring" />
	<context:component-scan base-package="io.spotnext.infrastructure.service" />
	<context:component-scan base-package="io.spotnext.infrastructure.strategy" />
	<context:component-scan base-package="io.spotnext.infrastructure.resolver" />
	<context:component-scan base-package="io.spotnext.infrastructure.interceptor" />
	<context:component-scan base-package="io.spotnext.core.management.service" />
	<context:component-scan base-package="io.spotnext.core.management.converter" />
	<context:component-scan base-package="io.spotnext.core.management.populator" />
	<context:component-scan base-package="io.spotnext.core.management.transformer" />
	<context:component-scan base-package="io.spotnext.core.management.support" />
	<context:component-scan base-package="io.spotnext.core.persistence.instrumentation.transformers" />
	<context:component-scan base-package="io.spotnext.core.persistence.service" />
	<context:component-scan base-package="io.spotnext.core.persistence.valueprovider" />
	<context:component-scan base-package="io.spotnext.core.security.service" />
	<context:component-scan base-package="io.spotnext.core.security.strategy" />
	<context:component-scan base-package="io.spotnext.core.infrastructure.aspect" />

	<context:component-scan base-package="io.spotnext.itemtype" />


<!-- 	<bean id="abstractBaseAspect" class="io.spotnext.core.infrastructure.aspect.AbstractBaseAspect" abstract="true" /> -->

<!-- 	<bean class="io.spotnext.core.infrastructure.aspect.LogAspect" factory-method="aspectOf" parent="abstractBaseAspect" /> -->
	<!-- <bean class="io.spotnext.infrastructure.aspect.ItemPropertyAccessAspect" factory-method="aspectOf" parent="abstractBaseAspect"> -->
	<!-- <property name="modelService" ref="modelService" /> -->
	<!-- <property name="queryService" ref="queryService" /> -->
	<!-- </bean> -->

	<!-- This mapping of property value providers is used to fetch Item models from collection-like properties -->
	<util:map id="itemPropertyValueProviders" key-type="java.lang.String"
		value-type="io.spotnext.core.persistence.valueprovider.ItemPropertyValueProvider">
		<!-- <entry key="Collection"> -->
		<!-- <ref bean="collectionValueProvider" /> -->
		<!-- </entry> -->
		<!-- <entry key="Map"> -->
		<!-- <ref bean="mapValueProvider" /> -->
		<!-- </entry> -->
		<!-- <entry key="Relation"> -->
		<!-- <ref bean="relationValueProvider" /> -->
		<!-- </entry> -->
		<!-- <entry key="Item"> -->
		<!-- <ref bean="referenceValueProvider" /> -->
		<!-- </entry> -->
	</util:map>

	<!-- spring beans -->
	<!-- define properties based parent message source -->
	<bean id="reloadableMessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames" value="classpath:messages/validation,classpath:messages/messages" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<alias name="defaultMessageInterpolator" alias="messageInterpolator" />
	<alias name="defaultMessageSource" alias="messageSource" />

	<alias name="l10nService" alias="defaultMessageInterpolator" />
	<alias name="l10nService" alias="defaultMessageSource" />
	<bean id="defaultL10nService" class="io.spotnext.core.infrastructure.service.impl.DefaultL10nService">
		<property name="parentMessageSource" ref="reloadableMessageSource" />
	</bean>

	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="formatters">
			<set>
				<bean class="io.spotnext.core.infrastructure.support.spring.BooleanConverter" />
			</set>
		</property>
	</bean>

	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" />

	<!-- event handling -->
	<bean id="applicationEventMulticaster" class="org.springframework.context.event.SimpleApplicationEventMulticaster">
		<property name="taskExecutor" ref="taskExecutor" />
	</bean>

	<!-- JSR-303 validator for spring -->

	<alias name="javaxValidator" alias="validator" />
	<bean id="javaxValidator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">

		<!-- set the l10n service as message sources -->
		<property name="validationMessageSource" ref="l10nService" />
		<property name="messageInterpolator" ref="l10nService" />
	</bean>

	<!-- SERVICES -->
<!-- 	<bean id="hibernatePersistenceService" class="io.spotnext.core.persistence.hibernate.impl.HibernatePersistenceService" /> -->
	<bean id="dataNucleusPersistenceService" class="io.spotnext.core.persistence.datanucleus.impl.DataNucleusPersistenceService" />

	<bean id="abstractService" class="io.spotnext.core.infrastructure.service.impl.AbstractService" abstract="true" />

	<!-- ALIASES -->

	<!-- services -->
	<alias name="defaultTransactionService" alias="transactionService" />
	<alias name="dataNucleusPersistenceService" alias="persistenceService" />
	<alias name="defaultTypeService" alias="typeService" />
	<alias name="defaultModelService" alias="modelService" />
	<alias name="defaultQueryService" alias="queryService" />
	<alias name="defaultLoggingService" alias="loggingService" />
	<alias name="defaultL10nService" alias="l10nService" />
	<alias name="defaultI18nService" alias="i18nService" />
	<alias name="defaultConfigurationService" alias="configurationService" />
	<alias name="defaultValidationService" alias="validationService" />
	<alias name="defaultUserService" alias="userService" />
	<alias name="defaultAuthenticationService" alias="authenticationService" />
	<alias name="defaultSessionService" alias="sessionService" />
	<alias name="dummyAccessControlService" alias="accessControlService" />

	<!-- strategies -->
	<alias name="md5PasswordEncryptionStrategy" alias="passwordEncryptionStrategy" />
	<alias name="defaultJsonSerializationStrategy" alias="jsonSerializationStrategy" />
	<alias name="defaultXmlSerializationStrategy" alias="xmlSerializationStrategy" />


	<!-- converters -->
	<bean id="abstractPopulatingConverter" class="io.spotnext.core.management.converter.impl.AbstractPopulatingConverter" abstract="true" />

	<bean id="itemTypeConverter" parent="abstractPopulatingConverter">
		<property name="targetClass" value="io.spotnext.core.management.support.data.GenericItemDefinitionData" />
		<property name="populators">
			<list>
				<ref bean="itemTypePopulator" />
			</list>
		</property>
	</bean>

	<!-- item interceptors -->
	<bean id="abstractItemInterceptorRegistry" abstract="true" class="io.spotnext.core.infrastructure.support.ItemInterceptorRegistry">

		<property name="typeService" ref="typeService" />
		<property name="persistenceService" ref="persistenceService" />
	</bean>

	<bean id="itemCreateInterceptorRegistry" parent="abstractItemInterceptorRegistry" />
	<bean id="itemValidateInterceptorRegistry" parent="abstractItemInterceptorRegistry" />
	<bean id="itemPrepareInterceptorRegistry" parent="abstractItemInterceptorRegistry" />
	<bean id="itemLoadInterceptorRegistry" parent="abstractItemInterceptorRegistry" />
	<bean id="itemRemoveInterceptorRegistry" parent="abstractItemInterceptorRegistry" />

</beans>
