<?xml version="1.0" encoding="ISO-8859-1"?>
<types
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:noNamespaceSchemaLocation="https://core-next.io/schemas/v2/itemtypes.xsd">

	<!-- atomic java types -->
	<!-- primitive types -->
	<atomic name="boolean" className="boolean" />
	<atomic name="byte" className="byte" />
	<atomic name="short" className="short" />
	<atomic name="int" className="int" />
	<atomic name="long" className="long" />
	<atomic name="float" className="float" />
	<atomic name="double" className="double" />
	
	<!-- complex types -->
	<atomic name="String" className="java.lang.String" />
	<atomic name="Boolean" className="java.lang.Boolean" />
	<atomic name="Byte" className="java.lang.Byte" />
	<atomic name="Short" className="java.lang.Short" />
	<atomic name="Integer" className="java.lang.Integer" />
	<atomic name="Long" className="java.lang.Long" />
	<atomic name="Double" className="java.lang.Double" />
	<atomic name="Float" className="java.lang.Float" />
	<atomic name="BigDecimal" className="java.math.BigDecimal" />
	<atomic name="LocalDate" className="java.time.LocalDate" />
	<atomic name="LocalTime" className="java.time.LocalTime" />
	<atomic name="LocalDateTime" className="java.time.LocalDateTime" />
	<atomic name="Instant" className="java.time.Instant" />
	<atomic name="ByteArray" className="java.lang.Byte" array="true" />
	<atomic name="Locale" className="java.util.Locale" />

	<collection name="BooleanList" elementType="Boolean" />
	<collection name="StringList" elementType="String" />
	<collection name="ByteList" elementType="Byte" />
	<collection name="ShortList" elementType="Short" />
	<collection name="IntegerList" elementType="Integer" />
	<collection name="LongList" elementType="Long" />
	<collection name="DoubleList" elementType="Double" />
	<collection name="FloatList" elementType="Float" />
	<collection name="UserRoleList" elementType="UserRole" />
	

	<!-- enums -->

	<enum name="UserRole" package="io.spotnext.itemtype.core.enumeration">
		<description>The user role used to determine access rights and authorizations.</description>
		<value code="ADMIN" />
		<value code="USER" />
		<value code="ANONYMOUS" />
	</enum>

	<enum name="ApprovalStatus" package="io.spotnext.itemtype.core.enumeration">
		<description>The approval status, eg. of products or CMS items.</description>
		<value code="APPROVED" />
		<value code="UNAPPROVED" />
		<value code="CHECK" />
	</enum>

	<enum name="DataFormat" package="io.spotnext.itemtype.core.enumeration">
		<description>Formats that are supported for import of data.</description>
		<value code="ImpEx" />
		<value code="JSON" />
		<value code="XML" />
	</enum>
	
	<enum name="SortOrder" package="io.spotnext.itemtype.core.enumeration">
		<value code="ASCENDING" value="ASC" />
		<value code="DESCENDING" value="DESC" />
		<value code="UNSORTED" value="UNSORTED" />
	</enum>

	<enum name="SearchOperator" package="io.spotnext.itemtype.core.enumeration">
		<value code="EQUALS" />
		<value code="NOT_EQUALS" />
		<value code="CONTAINS" />
		<value code="NOT_CONTAINS" />
		<value code="STARTS_WITH" />
		<value code="ENDS_WITH" />
	</enum>	
	
	<enum name="CronJobStatus" package="io.spotnext.itemtype.core.enumeration">
		<value code="FINISHED" />
		<value code="RUNNING" />
		<value code="PAUSED" />
		<value code="ABORTED" />
		<value code="SCHEDULED" />
		<value code="UNKNOWN" />
	</enum>
	
	<enum name="CronJobResult" package="io.spotnext.itemtype.core.enumeration">
		<value code="SUCCESS" />
		<value code="FAILURE" />
		<value code="ERROR" />
		<value code="UNKNOWN" />
	</enum>
	
	<bean name="ImportConfiguration" package="io.spotnext.itemtype.core.beans">
		<description>Holds import configuration and parameters.</description>
		<properties>
			<property name="format" type="DataFormat">
				<description>Specifies the import format.</description>
				<annotations>
					<annotation javaClass="jakarta.validation.constraints.NotNull" />
				</annotations>
			</property>
			<property name="scriptIdentifier" type="String">
				<description>Holds the filename or abstract identifier of the import data</description>
				<annotations>
					<annotation javaClass="jakarta.validation.constraints.NotNull" />
				</annotations>
			</property>
			<property name="ignoreErrors" type="Boolean">
				<description>If true import errors are ignored are ignored and processing is continued</description>
				<defaultValue>false</defaultValue>
			</property>
		</properties>
	</bean>
	
	<bean name="SerializationConfiguration" package="io.spotnext.itemtype.core.beans">
		<description>Holds serialization configuration and parameters.</description>
		<properties>
			<property name="serializeNulls" type="boolean" />
			<property name="format" type="DataFormat">
				<description>Specifies the serialization format.</description>
				<annotations>
					<annotation javaClass="jakarta.validation.constraints.NotNull" />
				</annotations>
				<defaultValue>io.spotnext.itemtype.core.enumeration.DataFormat.JSON</defaultValue>
			</property>
		</properties>
	</bean>
	
	<bean name="UserData" package="io.spotnext.itemtype.core.beans">
		<description>Holds user information.</description>
		<properties>
			<property name="uid" type="String">
				<description>The users id.</description>
			</property>
		</properties>
	</bean>
	
	<bean name="CronJobData" package="io.spotnext.itemtype.core.beans">
		<properties>
			<property name="uid" type="String">
				<description>The cronjob id.</description>
			</property>
			<property name="running" type="boolean" />
			<property name="lastResult" type="CronJobResult">
				<description>The result of the last run.</description>
				<defaultValue>io.spotnext.itemtype.core.enumeration.CronJobResult.UNKNOWN</defaultValue>
			</property>
			<property name="lastStarted" type="LocalDateTime" />
			<property name="lastFinished" type="LocalDateTime" />
			<property name="numberOfRetries" type="int" />
		</properties>
	</bean>

	<!-- users and groups -->

	<type name="UniqueIdItem" abstract="true" package="io.spotnext.itemtype.core"
		persistable="false">
		<description>The base type of all types that have a unique id property.</description>
		<properties>
			<property name="uid" type="String">
				<description>The unique id of the object.</description>
				<modifiers unique="true" />
				<annotations>
					<annotation javaClass="org.hibernate.validator.constraints.Length">
						<argument name="min" numberValue="3" />
					</annotation>
					<annotation javaClass="jakarta.validation.constraints.NotNull" />
				</annotations>
				<persistence indexed="true" />
			</property>
		</properties>
	</type>

	<type name="CatalogItem" abstract="true" package="io.spotnext.itemtype.core"
		extends="UniqueIdItem" persistable="false">
		<description>The base type all types that are catalogable.</description>
		<properties>
			<property name="catalogVersion" type="CatalogVersion">
				<description>The catalog version this item belongs to.</description>
				<modifiers unique="true" />
				<annotations>
					<annotation javaClass="jakarta.validation.constraints.NotNull" />
				</annotations>
			</property>
		</properties>
	</type>

	<type name="Principal" abstract="true" package="io.spotnext.itemtype.core.user"
		extends="UniqueIdItem">
		<description>The base type all user related item types.</description>
		<properties>
			<property name="shortName" type="String">
				<description>The short name identifying the principal object.
                </description>
			</property>
		</properties>
	</type>

	<type name="PrincipalGroup" abstract="true" package="io.spotnext.itemtype.core.user"
		extends="Principal">
		<description>The base type all principal group-like structures.</description>
		<properties>
		</properties>
	</type>

	<type name="User" typeCode="User" extends="Principal"
		package="io.spotnext.itemtype.core.user">
		<description>Represents a user.</description>
		<properties>
			<property name="emailAddress" type="String">
				<description>The main email address of the user.</description>
			</property>
			<property name="password" type="String">
				<description>The login password, can be encrypted.</description>
			</property>
		</properties>
	</type>

	<type name="UserGroup" typeCode="UserGroup" extends="PrincipalGroup"
		package="io.spotnext.itemtype.core.user">
		<description>The base type all user group-like structures.</description>
	</type>

	<!-- addresses -->

	<type name="Address" typeCode="Address" package="io.spotnext.itemtype.core.user"
		abstract="true">
		<properties>
			<property name="streetName" type="String" />
			<property name="streetNumber" type="String" />
			<property name="city" type="String" />
			<property name="postalCode" type="String" />
			<property name="state" type="String" />
			<property name="country" type="Country" />
		</properties>
	</type>

	<type name="UserAddress" typeCode="UserAddress" package="io.spotnext.itemtype.core.user"
		extends="Address">
		<properties>
			<property name="emailAddress" type="String" />
			<property name="phone" type="String" />
		</properties>
	</type>

	<type name="AddressType" typeCode="AddressType" package="io.spotnext.itemtype.core.user"
		extends="UniqueIdItem">
		<properties>
			<property name="name" type="String">
				<description>The name of the address type.</description>
			</property>
		</properties>
	</type>

	<type name="ContactDetailsType" typeCode="ContactDetailsType"
		package="io.spotnext.itemtype.core.user" extends="UniqueIdItem">
		<properties>
			<property name="name" type="String">
				<description>The name of the contact details type.</description>
			</property>
		</properties>
	</type>

	<!-- basic catalogs -->

	<type name="Catalog" typeCode="Catalog" package="io.spotnext.itemtype.core.catalog"
		extends="UniqueIdItem">
		<description>This is the container for all category and product-related types. It can have multiple catalog version.</description>
		<properties>
			<property name="name" type="String">
				<description>The name of the catalog.</description>
			</property>
		</properties>
	</type>

	<type name="CatalogVersion" typeCode="CatalogVersion"
		package="io.spotnext.itemtype.core.catalog" extends="UniqueIdItem">
		<description>A catalog version holds catalogable types that can be synchronized into another catalog version.</description>
		<properties>
			<property name="name" type="String">
				<description>The name of the catalog version.</description>
			</property>
			<property name="synchronizationTarget" type="CatalogVersion">
				<description>The target catalog version to which all containing items will be synchronized..</description>
			</property>
		</properties>
	</type>

	<!-- media objects -->

	<type name="AbstractMedia" abstract="true" package="io.spotnext.itemtype.core.media"
		extends="CatalogItem">
		<properties>
			<property name="mimeType" type="String">
				<description>The mime type of the content.</description>
			</property>
			<property name="encoding" type="String">
				<description>The encoding of the content, eg. "UTF-8" or "base64".</description>
			</property>
		</properties>
	</type>

	<type name="Media" extends="AbstractMedia" package="io.spotnext.itemtype.core.media">
		<properties>
			<property name="data" type="ByteArray">
				<description>The content of the data object.</description>
				<persistence columnType="BLOB" />
			</property>
		</properties>
	</type>

	<type name="FileMedia" extends="Media" package="io.spotnext.itemtype.core.media">
		<properties>
			<property name="dataPath" type="String">
				<description>The file path to the data object.</description>
			</property>
			<property name="data" type="ByteArray">
				<description>The content of the data object (read from the filesystem).</description>
				<accessors valueProvider="mediaDataValueProvider" />
			</property>
		</properties>
	</type>

	<type name="MediaContainer" package="io.spotnext.itemtype.core.media"
		extends="CatalogItem">
		<properties>
		</properties>
	</type>

	<!-- internationalization -->

	<type name="Country" package="io.spotnext.itemtype.core.internationalization">
		<properties>
			<property name="isoCode" type="String">
				<description>
                    The ISO-2 code of the country.
                    @see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
                </description>
				<modifiers unique="true" />
				<annotations>
					<annotation javaClass="jakarta.validation.constraints.NotNull" />
					<annotation javaClass="org.hibernate.validator.constraints.Length">
						<argument name="min" numberValue="2" />
						<argument name="max" numberValue="2" />
					</annotation>
				</annotations>
			</property>
			<property name="iso3Code" type="String">
				<description>
				The ISO-3 code of the country.
				@see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3.
			</description>
				<annotations>
					<annotation javaClass="jakarta.validation.constraints.NotNull" />
					<annotation javaClass="org.hibernate.validator.constraints.Length">
						<argument name="min" numberValue="3" />
						<argument name="max" numberValue="3" />
					</annotation>
				</annotations>
			</property>
			<property name="shortName" type="LocalizedString" localized="true">
				<description>The short name of the country, eg. "Austria".</description>
			</property>
			<property name="longName" type="LocalizedString" localized="true">
				<description>The long name of the country, eg. "Republic of Austria".</description>
			</property>
			<property name="phoneCountryCode" type="String">
				<description>The phone country code, eg. +43 or 0043 for Austria</description>
			</property>
		</properties>
	</type>

	<type name="Language" package="io.spotnext.itemtype.core.internationalization">
		<description>This represents a language object and it's locale.</description>
		<properties>
			<property name="iso3Code" type="String">
				<description>
                    The ISO-3 code of the language.
                    @see https://en.wikipedia.org/wiki/ISO_639-3.
                </description>
				<modifiers unique="true" />
				<annotations>
					<annotation javaClass="jakarta.validation.constraints.NotNull" />
					<annotation javaClass="org.hibernate.validator.constraints.Length">
						<argument name="min" numberValue="3" />
						<argument name="max" numberValue="3" />
					</annotation>
				</annotations>
			</property>
			<property name="isoCode" type="String">
				<description>
                    The ISO-3 code of the language.
                    @see https://en.wikipedia.org/wiki/ISO_639-1.
                </description>
				<annotations>
					<annotation javaClass="org.hibernate.validator.constraints.Length">
						<argument name="max" numberValue="2" />
					</annotation>
				</annotations>
			</property>
			<property name="name" type="LocalizedString" localized="true">
				<description>The international name of the language.</description>
			</property>
		</properties>
	</type>

	<type name="Currency" package="io.spotnext.itemtype.core.internationalization">
		<description>Represents a currency.</description>
		<properties>
			<property name="isoCode" type="String">
				<description>The iso code of the currency.</description>
				<modifiers unique="true" />
				<annotations>
					<annotation javaClass="jakarta.validation.constraints.NotNull" />
				</annotations>
			</property>
			<property name="name" type="LocalizedString" localized="true">
				<description>The localized name of the currency.</description>
			</property>
		</properties>
	</type>

	<type name="LocalizedString" package="io.spotnext.itemtype.core.internationalization">
		<description>This type can be used to store localized strings.</description>
		<interfaces>
			<interface javaClass="io.spotnext.infrastructure.type.Localizable">
				<genericType value="String" />
			</interface>
		</interfaces>
		<properties>
			<property name="en" type="String">
				<modifiers writable="false" readable="false" />
			</property>
			<property name="en_GB" type="String">
				<modifiers writable="false" readable="false" />
			</property>
			<property name="de" type="String">
				<modifiers writable="false" readable="false" />
			</property>
			<property name="de_DE" type="String">
				<modifiers writable="false" readable="false" />
			</property>
			<property name="fr" type="String">
				<modifiers writable="false" readable="false" />
			</property>
			<property name="fr_FR" type="String">
				<modifiers writable="false" readable="false" />
			</property>
			<property name="es" type="String">
				<modifiers writable="false" readable="false" />
			</property>
			<property name="es_ES" type="String">
				<modifiers writable="false" readable="false" />
			</property>
			<property name="it" type="String">
				<modifiers writable="false" readable="false" />
			</property>
			<property name="it_IT" type="String">
				<modifiers writable="false" readable="false" />
			</property>
			<property name="ja" type="String">
				<modifiers writable="false" readable="false" />
			</property>
			<property name="ja_JP" type="String">
				<modifiers writable="false" readable="false" />
			</property>
		</properties>
	</type>
	
	<type name="LocalizationValue" package="io.spotnext.itemtype.core.internationalization"
		extends="UniqueIdItem">
		<description>This type can be used to store localized values different languages/locales.</description>
		<properties>
			<property name="locale" type="Locale">
				<description>
				The locale of the translation key.
			</description>
				<modifiers unique="true" />
				<annotations>
					<annotation javaClass="jakarta.validation.constraints.NotNull" />
				</annotations>
			</property>
			<property name="value" type="String">
				<description>The localized value of the key.</description>
			</property>
		</properties>
	</type>

	<!-- configuration -->

	<type name="Configuration" package="io.spotnext.itemtype.core.configuration"
		extends="UniqueIdItem">
		<description>This type can be used to store a set of configuration entries.</description>
		<properties>
			<property name="description" type="String">
				<description>The short description of the configuration's purpose.</description>
			</property>
		</properties>
	</type>

	<type name="ConfigEntry" package="io.spotnext.itemtype.core.configuration"
		extends="UniqueIdItem">
		<description>This type can be used to store a configuration entry.</description>
		<properties>
			<property name="stringValue" type="String" />
			<property name="intValue" type="Integer" />
			<property name="longValue" type="Long" />
			<property name="doubleValue" type="Double" />
			<property name="floatValue" type="Float" />
			<property name="description" type="String">
				<description>The short description of the configuration entry's purpose.</description>
			</property>
		</properties>
	</type>
	
	<!-- COCKPIT CONFIGURATION TYPES -->
	
	<type name="CockpitTypeConfiguration" package="io.spotnext.itemtype.core.cockpit"
		extends="UniqueIdItem">
		<properties>
			<property name="owner" type="Principal" />
			<property name="labelExpression" type="String">
				<description>A SpEL expression that returns the label for the given input object.</description>
			</property>
			<property name="labelProviderBean" type="String" >
				<description>A bean id/alias that implements io.spotnext.admin.providers.LabelProvider.</description>
			</property>
		</properties>
	</type>
	
	<type name="AbstractCockpitColumnConfiguration" abstract="true" package="io.spotnext.itemtype.core.cockpit"
		extends="UniqueIdItem">
		<properties>
			<property name="columnName" type="String" />
			<property name="name" type="LocalizedString" localized="true" />
			<property name="position" type="int" />
			<property name="visible" type="boolean" />
		</properties>
	</type>
	
	<type name="CockpitColumnListViewConfig" package="io.spotnext.itemtype.core.cockpit"
		extends="AbstractCockpitColumnConfiguration">
		<properties>
			<property name="sortOrder" type="SortOrder" />
			<property name="sortable" type="boolean" />
		</properties>
	</type>
	
	<type name="CockpitColumnSearchViewConfig" package="io.spotnext.itemtype.core.cockpit"
		extends="AbstractCockpitColumnConfiguration">
		<properties>
			<property name="operator" type="SearchOperator" />
		</properties>
	</type>
	
<!-- 	<type name="CockpitTypeConfiguration" package="io.spotnext.itemtype.core.cockpit" -->
<!-- 		extends="UniqueIdItem"> -->
<!-- 		<properties> -->
<!-- 			<property name="stringValue" type="String" /> -->
<!-- 			<property name="intValue" type="Integer" /> -->
<!-- 			<property name="longValue" type="Long" /> -->
<!-- 			<property name="doubleValue" type="Double" /> -->
<!-- 			<property name="floatValue" type="Float" /> -->
<!-- 			<property name="description" type="String"> -->
<!-- 				<description>The short description of the configuration entry's purpose.</description> -->
<!-- 			</property> -->
<!-- 		</properties> -->
<!-- 	</type> -->

	<type name="AbstractCronJob" typeCode="cronjob" extends="UniqueIdItem" abstract="true" package="io.spotnext.itemtype.core.scheduling">
		<description>The base type for all cronjobs.</description>
		<properties>
			<property name="trigger" type="CronJobTrigger" />
			<property name="sessionUser" type="String">
				<description>The default user that is used for the session in which the cronjob is executed.</description>
				<defaultValue>"admin"</defaultValue>
			</property>
			<property name="sessionLanguage" type="Language">
				<description>The default language that is used for the session in which the cronjob is executed.</description>
			</property>
			<property name="performable" type="String">
				<description>
					The spring bean name of the underlying business logic 
					(an implementation of io.spotnext.core.infrastructure.scheduling.support.AbstractCronJobPerformable)
				</description>
			</property>
			<property name="status" type="CronJobStatus">
				<description>The current status of the cronjob.</description>
				<defaultValue>io.spotnext.itemtype.core.enumeration.CronJobStatus.UNKNOWN</defaultValue>
			</property>
			<property name="result" type="CronJobResult">
				<description>The reslt of the last run.</description>
				<defaultValue>io.spotnext.itemtype.core.enumeration.CronJobResult.UNKNOWN</defaultValue>
			</property>
			<property name="lastStarted" type="LocalDateTime" />
			<property name="lastFinished" type="LocalDateTime" />
			<property name="numberOfRetries" type="int">
				<description>This value will be reset to 0 when the cronjob was performed successfully.</description>
			</property>
			<property name="maxRetriesOnFailure" type="int">
				<defaultValue>3</defaultValue>
			</property>
		</properties>
	</type>
	
	<type name="NoopCronJob" extends="AbstractCronJob" package="io.spotnext.itemtype.core.scheduling" />
	
	<type name="CronJobTrigger" package="io.spotnext.itemtype.core.scheduling">
		<description>The trigger for a cronjob. Valid values for the properties are based on the cronjob syntax.</description>
		<properties>
			<property name="second" type="String" />
			<property name="minute" type="String" />
			<property name="hour" type="String" />
			<property name="dayOfMonth" type="String" />
			<property name="month" type="String" />
			<property name="weekDay" type="String" />
		</properties>
	</type>

	<!-- RELATIONS -->

	<relation name="Catalog2CatalogVersion">
		<source itemType="Catalog" mappedBy="catalog" cardinality="one">
			<description>The catalog this catalog version belongs to.</description>
			<modifiers unique="true" />
		</source>
		<target itemType="CatalogVersion" mappedBy="versions"
			cardinality="many" collectionType="List">
			<description>The catalog version of this catalog.</description>
		</target>
	</relation>

	<relation name="PrincipalGroup2Principal">
		<description>The relation between principal groups and principals</description>
		<source itemType="PrincipalGroup" mappedBy="groups"
			collectionType="List" cardinality="many">
			<description>The principal groups assigned to the principal.</description>
		</source>
		<target itemType="Principal" mappedBy="members" cardinality="many"
			collectionType="List">
			<description>The members of the group.</description>
		</target>
	</relation>

	<relation name="User2Address">
		<description>Defines a address ownership relation.</description>
		<source itemType="User" mappedBy="owner" cardinality="one" />
		<target itemType="UserAddress" mappedBy="addresses"
			cardinality="many" />
	</relation>

	<relation name="Address2AddressType">
		<description>Defines a address ownership relation.</description>
		<source itemType="Address" cardinality="many" />
		<target itemType="AddressType" mappedBy="type" cardinality="one" />
	</relation>

	<relation name="MediaContainer2Media">
		<source itemType="MediaContainer" mappedBy="container"
			cardinality="one" />
		<target itemType="Media" mappedBy="medias" cardinality="many" />
	</relation>

	<relation name="Configuration2ConfigEntry">
		<description>The config entries referenced by this configuration.</description>
		<source itemType="Configuration" mappedBy="configuration"
			cardinality="one" />
		<target itemType="ConfigEntry" mappedBy="entries" cardinality="many" />
	</relation>

	<relation name="Country2Language">
		<description>The languages available for that country.</description>
		<source itemType="Country" mappedBy="countries" cardinality="many" />
		<target itemType="Language" mappedBy="languages" cardinality="many" />
	</relation>
	
	<relation name="CatalogVersion2SynchronizedLanguage">
		<description>The languages that are synchronized from source to target catalog version.</description>
		<source itemType="CatalogVersion" cardinality="many" />
		<target itemType="Language" mappedBy="synchronizedLanguages" cardinality="many" />
	</relation>
	
	<relation name="CockpitTypeConfiguration2CockpitColumnListViewConfig">
		<source itemType="CockpitTypeConfiguration" cardinality="many" />
		<target itemType="CockpitColumnListViewConfig" mappedBy="listColumns" cardinality="many" />
	</relation>
	
	<relation name="CockpitTypeConfiguration2CockpitColumnSearchViewConfig">
		<source itemType="CockpitTypeConfiguration" cardinality="many" />
		<target itemType="CockpitColumnSearchViewConfig" mappedBy="searchColumns" cardinality="many" />
	</relation>

</types>
